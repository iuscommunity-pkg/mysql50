Back-ported patch for upstream bug #54476.


diff -Naur mysql-5.0.77.orig/mysql-test/r/func_gconcat.result mysql-5.0.77/mysql-test/r/func_gconcat.result
--- mysql-5.0.77.orig/mysql-test/r/func_gconcat.result	2009-01-29 17:38:14.000000000 -0500
+++ mysql-5.0.77/mysql-test/r/func_gconcat.result	2010-10-22 15:14:32.398920618 -0400
@@ -973,3 +973,22 @@
 1
 DROP TABLE t1, t2;
 End of 5.0 tests
+#
+# Bug #54476: crash when group_concat and 'with rollup' in prepared statements
+# 
+CREATE TABLE t1 (a INT);
+INSERT INTO t1 VALUES (1), (2);
+PREPARE stmt FROM "SELECT GROUP_CONCAT(t1.a ORDER BY t1.a) FROM t1 JOIN t1 t2 GROUP BY t1.a WITH ROLLUP";
+EXECUTE stmt;
+GROUP_CONCAT(t1.a ORDER BY t1.a)
+1,1
+2,2
+1,1,2,2
+EXECUTE stmt;
+GROUP_CONCAT(t1.a ORDER BY t1.a)
+1,1
+2,2
+1,1,2,2
+DEALLOCATE PREPARE stmt;
+DROP TABLE t1;
+End of 5.1 tests
diff -Naur mysql-5.0.77.orig/mysql-test/t/func_gconcat.test mysql-5.0.77/mysql-test/t/func_gconcat.test
--- mysql-5.0.77.orig/mysql-test/t/func_gconcat.test	2009-01-29 17:37:51.000000000 -0500
+++ mysql-5.0.77/mysql-test/t/func_gconcat.test	2010-10-22 15:17:19.892989022 -0400
@@ -694,3 +694,19 @@
 DROP TABLE t1, t2;
 
 --echo End of 5.0 tests
+
+--echo #
+--echo # Bug #54476: crash when group_concat and 'with rollup' in prepared statements
+--echo # 
+
+CREATE TABLE t1 (a INT);
+INSERT INTO t1 VALUES (1), (2);
+
+PREPARE stmt FROM "SELECT GROUP_CONCAT(t1.a ORDER BY t1.a) FROM t1 JOIN t1 t2 GROUP BY t1.a WITH ROLLUP";
+EXECUTE stmt;
+EXECUTE stmt;
+
+DEALLOCATE PREPARE stmt;
+DROP TABLE t1;
+
+--echo End of 5.1 tests
diff -Naur mysql-5.0.77.orig/sql/item_sum.cc mysql-5.0.77/sql/item_sum.cc
--- mysql-5.0.77.orig/sql/item_sum.cc	2009-01-29 16:45:27.000000000 -0500
+++ mysql-5.0.77/sql/item_sum.cc	2010-10-22 15:13:37.681015897 -0400
@@ -3169,7 +3169,6 @@
   tree(item->tree),
   unique_filter(item->unique_filter),
   table(item->table),
-  order(item->order),
   context(item->context),
   arg_count_order(item->arg_count_order),
   arg_count_field(item->arg_count_field),
@@ -3182,6 +3181,24 @@
 {
   quick_group= item->quick_group;
   result.set_charset(collation.collation);
+
+  /*
+    Since the ORDER structures pointed to by the elements of the 'order' array
+    may be modified in find_order_in_list() called from
+    Item_func_group_concat::setup(), create a copy of those structures so that
+    such modifications done in this object would not have any effect on the
+    object being copied.
+  */
+  ORDER *tmp;
+  if (!(order= (ORDER **) thd->alloc(sizeof(ORDER *) * arg_count_order +
+                                     sizeof(ORDER) * arg_count_order)))
+    return;
+  tmp= (ORDER *)(order + arg_count_order);
+  for (uint i= 0; i < arg_count_order; i++, tmp++)
+  {
+    memcpy(tmp, item->order[i], sizeof(ORDER));
+    order[i]= tmp;
+  }
 }
 
 
diff -Naur mysql-5.0.77.orig/sql/table.h mysql-5.0.77/sql/table.h
--- mysql-5.0.77.orig/sql/table.h	2009-01-29 16:45:35.000000000 -0500
+++ mysql-5.0.77/sql/table.h	2010-10-22 15:13:37.681015897 -0400
@@ -31,7 +31,6 @@
   struct st_order *next;
   Item	 **item;			/* Point at item in select fields */
   Item	 *item_ptr;			/* Storage for initial item */
-  Item   **item_copy;			/* For SPs; the original item ptr */
   int    counter;                       /* position in SELECT list, correct
                                            only if counter_used is true*/
   bool	 asc;				/* true if ascending */
