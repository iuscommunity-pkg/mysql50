Back-ported patch for upstream bug #54575.


diff -Naur mysql-5.0.77.orig/mysql-test/r/func_like.result mysql-5.0.77/mysql-test/r/func_like.result
--- mysql-5.0.77.orig/mysql-test/r/func_like.result	2009-01-29 17:38:14.000000000 -0500
+++ mysql-5.0.77/mysql-test/r/func_like.result	2010-10-22 16:31:22.083989960 -0400
@@ -165,3 +165,17 @@
 select _cp1251'andre%' like convert('andreÊ%' using cp1251)  escape 'Ê';
 _cp1251'andre%' like convert('andreÊ%' using cp1251)  escape 'Ê'
 1
+End of 4.1 tests
+#
+# Bug #54575: crash when joining tables with unique set column
+#
+CREATE TABLE t1(a SET('a') NOT NULL, UNIQUE KEY(a));
+CREATE TABLE t2(b INT PRIMARY KEY);
+INSERT INTO t1 VALUES ();
+Warnings:
+Warning	1364	Field 'a' doesn't have a default value
+INSERT INTO t2 VALUES (1), (2), (3);
+SELECT 1 FROM t2 JOIN t1 ON 1 LIKE a GROUP BY a;
+1
+DROP TABLE t1, t2;
+End of 5.1 tests
diff -Naur mysql-5.0.77.orig/mysql-test/t/func_like.test mysql-5.0.77/mysql-test/t/func_like.test
--- mysql-5.0.77.orig/mysql-test/t/func_like.test	2009-01-29 17:37:51.000000000 -0500
+++ mysql-5.0.77/mysql-test/t/func_like.test	2010-10-22 16:31:22.084989831 -0400
@@ -112,5 +112,19 @@
 #
 select _cp1251'andre%' like convert('andreÊ%' using cp1251)  escape 'Ê';
 
-#
-# End of 4.1 tests
+
+--echo End of 4.1 tests
+
+
+--echo #
+--echo # Bug #54575: crash when joining tables with unique set column
+--echo #
+CREATE TABLE t1(a SET('a') NOT NULL, UNIQUE KEY(a));
+CREATE TABLE t2(b INT PRIMARY KEY);
+INSERT INTO t1 VALUES ();
+INSERT INTO t2 VALUES (1), (2), (3);
+SELECT 1 FROM t2 JOIN t1 ON 1 LIKE a GROUP BY a;
+DROP TABLE t1, t2;
+
+
+--echo End of 5.1 tests
diff -Naur mysql-5.0.77.orig/sql/item_cmpfunc.cc mysql-5.0.77/sql/item_cmpfunc.cc
--- mysql-5.0.77.orig/sql/item_cmpfunc.cc	2009-01-29 16:45:26.000000000 -0500
+++ mysql-5.0.77/sql/item_cmpfunc.cc	2010-10-22 16:35:00.729922139 -0400
@@ -4216,13 +4216,14 @@
   if (args[1]->const_item())
   {
     String* res2= args[1]->val_str((String *)&tmp_value2);
+    const char *ptr2;
 
-    if (!res2)
+    if (!res2 || !(ptr2= res2->ptr()))
       return OPTIMIZE_NONE;
 
-    if (*res2->ptr() != wild_many)
+    if (*ptr2 != wild_many)
     {
-      if (args[0]->result_type() != STRING_RESULT || *res2->ptr() != wild_one)
+      if (args[0]->result_type() != STRING_RESULT || *ptr2 != wild_one)
 	return OPTIMIZE_OP;
     }
   }
